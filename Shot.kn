{
  ショット
}

class ShotList()
  var shotList : Actor@List
  var animation : Animation@Animation

  { 初期化 }
  func Initialize(path : []char, rect : Main@Rect)
    do this.shotList :: #Actor@List
    do this.animation :: (#Animation@Animation).Animation(path, rect)
  end func

  { ショット発生 }
  func Add(position : Main@Position, velocity : Main@Vector2, category : byte32, mask : byte32)
    var actor : Actor@Actor :: Actor@Create(position, Main@MakeRect(-16.0, -8.0, 16.0, 8.0))
    do actor.velocity :: ##velocity
    do actor.direction.x :: velocity.x < 0.0 ?(-1.0, 1.0)
    do actor.direction.y :: 0.0
    do actor.category :: category
    do actor.collisionMask :: mask
    do this.shotList.Add(actor)
  end func

  { ショット移動 }
  func Action(resource : Main@Resource)
    do this.shotList.Head()
    while (!this.shotList.ChkEnd())
      var shot : Actor@Actor :: this.shotList.Get()
      var result : Map@CollisionResult :: Map@Collision(shot)
      if (result.isHitX | result.isHitY)
        do this.shotList.Del()
      elif (shot.position.x < -16.0 | shot.position.x > Map@width $ float * Map@blockW)
        do this.shotList.Del()
      else
        do this.shotList.Next()
      end if
    end while
  end func

  { 描画 }
  func Draw(camera : Main@Position)
    do this.shotList.Head()
    while (!this.shotList.ChkEnd())
      var shot : Actor@Actor :: this.shotList.Get()
      var x : float :: shot.position.x - 16.0 - camera.x
      var y : float :: shot.position.y - 8.0 - camera.y
      do this.animation.Draw(x, y, Main@MakeColorRGBA(1.0, 1.0, 1.0, 1.0), shot.direction.x < 0.0 ?(Animation@Direction#Left, Animation@Direction#Right))
      do this.shotList.Next()
    end while
  end func

  { 衝突 }
  func Collision(rhs : Actor@List, f : func<(Actor@Actor, Actor@Actor) : Actor@List#DeletionRequest>)
    do this.shotList.Collision(rhs, f)
  end func
end class

{ 弾リストを作成する }
func Create(path : []char, rect : Main@Rect) : @ShotList
  var shotList : @ShotList :: #@ShotList
  do shotList.Initialize(path, rect)
  return shotList
end func

